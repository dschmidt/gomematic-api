version: '{build}'
image: 'Visual Studio 2017'

clone_folder: 'c:\gopath\src\github.com\gomematic\gomematic-api'

environment:
  GOPATH: c:\gopath
  DOCKER_USERNAME:
    secure: 'KAd8fvufvtwNH+f2HnRo0Q=='
  DOCKER_PASSWORD:
    secure: '+VYMVfoYKQZTPkMS3J3NJQ8Sh0/FGWj/1R5eJdz3ZpE='

install:
  - ps: |
      choco install make
  - ps: |
      docker version
      go version
  - ps: |
      $env:Path = "c:\gopath\bin;$env:Path"

build_script:
  - cmd: |
      make retool
  - cmd: |
      make sync
  - cmd: |
      make generate
  - cmd: |
      make build
  - cmd: |
      docker build -f docker/Dockerfile.windows.amd64 -t gomematic/gomematic-api:windows-amd64 .

test_script:
  - cmd: |
      docker run --rm gomematic/gomematic-api:windows-amd64 --help

deploy_script:
  - ps: |
      if ( $env:APPVEYOR_PULL_REQUEST_NUMBER ) {
        Write-Host Nothing to deploy.
      } else {
        echo $env:DOCKER_PASSWORD | docker login --username $env:DOCKER_USERNAME --password-stdin

        if ( $env:APPVEYOR_REPO_TAG -eq 'true' ) {
          $major,$minor,$patch = $env:APPVEYOR_REPO_TAG_NAME.substring(1).split('.')

          docker push gomematic/gomematic-api:windows-amd64

          docker tag gomematic/gomematic-api:windows-amd64 gomematic/gomematic-api:$major.$minor.$patch-windows-amd64
          docker push gomematic/gomematic-api:$major.$minor.$patch-windows-amd64

          docker tag gomematic/gomematic-api:windows-amd64 gomematic/gomematic-api:$major.$minor-windows-amd64
          docker push gomematic/gomematic-api:$major.$minor-windows-amd64

          docker tag gomematic/gomematic-api:windows-amd64 gomematic/gomematic-api:$major-windows-amd64
          docker push gomematic/gomematic-api:$major-windows-amd64
        } else {
          if ( $env:APPVEYOR_REPO_BRANCH -eq 'master' ) {
            docker push gomematic/gomematic-api:windows-amd64
          } else {
            Write-Host Ignoring feature branch.
          }
        }
      }
